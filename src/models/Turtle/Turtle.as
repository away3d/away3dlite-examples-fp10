//AS3LiteExporterAIR version 1.0, code Flash 10, generated by Away3D: http://www.away3d.compackage models{	import away3dlite.arcane;	import away3dlite.containers.*;	import away3dlite.core.base.*;	import away3dlite.materials.*;		import flash.display.Bitmap;	import flash.display.BitmapData;	import flash.geom.Matrix3D;	import flash.geom.Vector3D;		use namespace arcane;	public class Turtle extends ObjectContainer3D	{		[Embed(source="images/obj_0_0.jpg")]		private var Obj_0_0_Bitmap:Class;		private var objs:Object = {};		private var geos:Array = [];		private var oList:Array =[];		private var aC:Array;		private var aV:Array;		private var aU:Array;		private var _scale:Number;		public function Turtle(scaling:Number = 1)		{			_scale = scaling;			setSource();			addContainers();			buildMeshes();			buildMaterials();			cleanUp();		}		private function buildMeshes():void		{			var m0:Matrix3D = new Matrix3D(new Vector.<Number>([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]));						/*			1 2 3 4 			5 6 7 8 			9 1 2 3 			4 5 6 7 			  			must be   [1,5,9,4,2,6,1,5,3,7,2,6,4,8,3,7] 						not [1234567891234567]			*/			 			/*m0.sxx = 1;			m0.sxy = 0;			m0.sxz = 0;			m0.tx = 0;			m0.syx = 0;			m0.syy = 1;			m0.syz = 0;			m0.ty = 0;			m0.szx = 0;			m0.szy = 0;			m0.szz = 1;			m0.tz = 0;									m0.sxx = 1; m0.sxy = 0; m0.sxz = 0; m0.tx = 0;			m0.syx = 0; m0.syy = 1; m0.syz = 0; m0.ty = 0;			m0.szx = 0; m0.szy = 0; m0.szz = 1;  m0.tz = 0;						0					0				0					1			 			*/			objs.obj0 = {name:"obj_0_0",  transform:m0, container:1, bothsides:false, material:null, ownCanvas:false, pushfront:false, pushback:false};			objs.obj0.geo=geos[0];			var ref:Object;			var mesh:Mesh;			var j:int;			var av:Array;			var au:Array;			var aRef:Array ;			var vertices:Vector.<Number>;			var uvtData:Vector.<Number>;			var indices:Vector.<int>;			var index:int = 0;			 			for(var i:int = 0;i<1;++i){				ref = objs["obj"+i];				if(ref != null){					mesh = new Mesh();					mesh.type = "AS3LiteExport";					mesh.bothsides = ref.bothsides;					mesh.name = ref.name;					mesh.transform.matrix3D = ref.transform;					mesh.material = ref.material;										if(ref.container != -1)						aC[ref.container].addChild(mesh);					oList.push(mesh);					 					vertices= new Vector.<Number>();					uvtData = new Vector.<Number>();					indices = new Vector.<int>();					 					aRef = ref.geo.f.split(",");										for(j = 0;j<aRef.length;j+=6){						av = ref.geo.aV[parseInt(aRef[j], 16)].split("/");						vertices.push(Number(parseFloat(av[0]))*_scale, -Number(parseFloat(av[1]))*_scale, Number(parseFloat(av[2]))*_scale);						av = ref.geo.aV[parseInt(aRef[j+1],16)].split("/");						vertices.push(Number(parseFloat(av[0]))*_scale, -Number(parseFloat(av[1]))*_scale, Number(parseFloat(av[2]))*_scale);						av = ref.geo.aV[parseInt(aRef[j+2],16)].split("/");						vertices.push(Number(parseFloat(av[0]))*_scale, -Number(parseFloat(av[1]))*_scale, Number(parseFloat(av[2]))*_scale);												indices.push(index, index+1, index+2);						index+=3;						au = ref.geo.aU[parseInt(aRef[j+3],16)].split("/");						uvtData.push(parseFloat(au[0]), 1-parseFloat(au[1]), 0);						au = ref.geo.aU[parseInt(aRef[j+4],16)].split("/");						uvtData.push(parseFloat(au[0]), 1-parseFloat(au[1]), 0);						au = ref.geo.aU[parseInt(aRef[j+5],16)].split("/");						uvtData.push(parseFloat(au[0]), 1-parseFloat(au[1]), 0);					}										mesh._vertices = vertices;					mesh._uvtData = uvtData;					mesh._indices = indices;					 					mesh.buildFaces();					 				}			}		}		private function setSource():void		{			var geo0:Object = {};			geo0.aVstr="-128.1270/74.a28/c.01a1,-102.16ee/6d.221a/15.1467,-128.1270/5e.130c/20.1d58,-102.16ee/54.c9d/15.1467,-102.16ee/4a.1cf8/0.248d,-128.1270/49.5a8/0.248d,-102.16ee/54.c9d/-15.1466,-128.1270/5e.130c/-20.1d58,-102.16ee/6c.ac8/-15.1466,-128.1270/74.a28/-a.1042,-102.16ee/74.a28/0.248d,-128.1270/7f.1126/0.248d,-155.992/8a.1dce/1f.0177,-15a.cd0/5a.1f35/24.1cdc,-15a.cd0/47.20cc/0.248d,-15a.cd0/5a.1f35/-25.5b8,-155.992/89.546/-1e.11f8,-155.992/94.14f0/0.21ee,-17c.0136/63.1dc5/1e.2255,-17e.127a/91.1734/17.0b9,-179.1342/4f.2030/0.248d,-17c.0136/63.1dc5/-1e.225e,-17e.01f4/91.406/-13.0040,-180.2210/94.1504/0.1ff2,-18d.26d4/65.9a6/-f.2370,-191.177a/5e.7a7/0.248d,-197.1036/7c.1446/-9.406,-198.02ee/85.268e/0.2156,-197.1036/7c.1446/a.1fa1,-18d.26d4/65.9a6/11.1e6a,-19f.1e28/6d.5c8/0.248d,-118.b40/-7.230e/-9a.f82,-e7.015e/42.1d94/-3e.1b20,-f7.cc6/-20.1f91/-80.7b2,-af.244a/22.2005/-33.122e,-e2.dca/-14.dcd/-85.1fae,-8d.1310/22.2005/-60.ee4,-b3.1e3c/57.17e0/-76.20c6,-f7.cc6/-9.592/-96.1996,-124.aaa/-2e.13ed/-b0.2166,-f4.cee/-41.788/-92.2396,-d9.e2e/-42.1126/-98.148c,-103.c3a/-1f.15fd/-ad.460,-109.bea/-80.1c02/-cb.0230,-ee.d34/-83.820/-b8.d52,-c4.f32/-93.faa/-c1.1b44,-e2.dca/-70.1482/-c7.c3a,-ca.ee2/-b2.150e/-ee.17fc,-af.244a/22.2005/33.122f,-e7.015e/42.1d94/3e.1b20,-f7.cc6/-20.1f91/80.7b2,-118.b40/-7.230e/9a.f82,-e2.dca/-14.dcd/85.1fae,-8d.1310/22.2005/60.ee5,-f7.cc6/-9.592/96.198c,-b3.1e3c/57.17df/76.20c6,-124.aaa/-2e.13ed/b0.2166,-f4.cee/-41.788/92.2396,-d9.e2e/-42.1126/98.148c,-103.c3a/-1f.15fd/ad.460,-109.bea/-80.1c02/cb.0230,-ee.d34/-83.82a/b8.d52,-c4.f32/-93.faa/c1.1b44,-e2.dca/-70.1482/c7.c3a,-ca.ee2/-b2.1518/ee.17fc,a0.10ae/c.121a/-48.1170,a4.2530/c.121a/-36.16c6,fe.17ca/-21.cc2/-57.52c,114.1c34/-22.208a/-45.030a,f4.9e2/22.2005/-1b.552,127.dde/-a.21c6/-2b.896,116.d2a/-a.dcd/-56.137f,df.16f8/22.2005/-69.1cde,117.1e14/-1e.1a64/38.021a,a4.2530/c.121a/31.5fa,103.01ae/-21.1850/4c.e23,a0.10ae/c.121a/43.dc9,11b.2058/-9.143a/4a.11f8,df.16f8/22.2005/64.4d8,129.253a/-6.1db1/1d.2539,f4.9e2/22.2005/19.a59,149.105e/-6a.faa/-72.2148,15a.170c/-72.262a/-67.bc2,16b.b90/-44.0060/-2d.b58,164.7ee/-39.16ae/-46.1c4d,15d.2148/-6d.e74/56.0033,14e.24fe/-68.1478/64.69a,169.1900/-38.1f91/3d.150b,173.2364/-42.9bb/22.01b9,19c.1e5a/-65.f28/-33.1fb9,19f.1e28/-66.1752/2e.53c,af.e7e/c.121a/-0.248d,-a.17dd/4.12b7/0.248d,2c.134c/c.121a/-48.0208,6.17cb/c.121b/-51.1000,-1f.ac6/c.121b/-51.1000,-45.646/c.121b/-48.0208,-64.62c/c.121b/-35.d32,-78.2026/c.121b/-1d.004b,-7f.1bc6/c.121b/0.248d,-78.2026/c.121b/1d.004c,-64.62c/c.121b/35.d28,-45.646/c.121b/48.0208,-1f.ac6/c.121b/51.1001,6.17cb/c.121a/51.1001,2c.134c/c.121a/48.0208,f7.1b3a/22.2005/-0.248d,7b.1bb2/22.2005/-80.7b2,36.2048/22.2005/-92.2396,-11.1383/22.2005/-92.2396,-56.ee9/22.2005/-80.7b2,-bd.1b8a/22.2005/0.248d,-56.ee9/22.2005/80.7b2,-11.1383/22.2005/92.2396,36.2048/22.2005/92.2396,7b.1bb2/22.2005/80.7b2,169.dc0/42.1d93/-0.248d,14d.1f40/42.1d93/-2b.264a,108.23dc/42.1d94/-62.9de,a8.12d4/42.1d94/-a0.06e,55.202d/42.1d94/-b6.1252,-7.687/42.1d94/-b6.1252,-60.1be5/52.1c5c/-a0.06e,-f8.9f6/32.1ecd/0.248d,-60.1be5/52.1c5c/a0.06e,-7.687/42.1d94/b6.1252,55.202d/42.1d94/b6.1252,a8.12d4/42.1d94/a0.06e,108.23dc/42.1d93/62.9de,14d.1f40/42.1d93/2b.264a,165.2378/4d.2489/-0.248d,146.2396/4d.2489/-2b.264a,108.23dc/51.50b/-60.ee5,a8.12d4/54.c9c/-9e.578,52.ed7/57.142e/-b4.175c,-3.1c41/5a.1bc0/-b4.175c,-67.1784/6c.ac8/-9e.578,-ac.12e8/75.217a/-74.25d0,-ed.2404/71.029e/-3e.1b20,-ed.2404/71.029e/3e.1b20,-ac.12e8/75.217a/74.25d0,-67.1784/6c.ac8/9e.578,-3.1c41/5a.1bbf/b4.175c,52.ed7/57.142e/b4.175c,a8.12d4/54.c9c/9e.578,108.23dc/51.50a/60.ee5,146.2396/4d.2489/2b.264a,f0.1f9a/7f.111c/-0.248d,e9.23f0/7f.111c/-22.1851,c4.0168/81.015e/-4d.1a0e,7b.1bb2/82.18b0/-80.7b2,36.2048/85.2044/-91.0190,-e.022d/87.1086/-91.0190,-56.ee8/8f.fe6/-80.7b2,-8a.01ae/97.f50/-5e.13eb,-a9.0190/97.f50/-31.1735,-c4.172a/98.26a2/0.248d,-ff.596/84.8f2/0.248d,-a9.0190/97.f50/31.1736,-8a.01ae/97.f50/5e.13ec,-56.ee8/8f.fe6/80.7b2,-e.022d/87.1086/91.0190,36.2049/85.2044/91.0190,7b.1bb2/82.18b0/80.7b2,c4.0168/81.015e/4d.1a04,e9.23f0/7f.111c/22.1851,71.eb0/a2.1644/0.248d,6a.131a/a2.1644/-1d.004b,55.202d/a2.1644/-35.d32,36.2049/a4.686/-46.70f,10.24c8/a5.1de2/-4f.1507,-18.f29/a7.e1a/-4f.1507,-3e.aaa/a7.e1a/-46.70f,-59.203e/a8.256c/-35.d32,-6e.1324/a8.256c/-1b.552,-75.ece/aa.15ae/0.248d,-6e.1324/a8.256c/1b.552,-59.203e/a8.256c/35.d28,-3e.aaa/a7.e1a/46.70f,-18.f29/a7.e1a/4f.1508,10.24c8/a5.1de2/4f.1508,36.2049/a4.686/46.70f,55.202d/a2.1644/35.d28,6a.131a/a2.1644/1d.004c,-3.1c41/b2.1518/0.248d";			geo0.aUstr="0.140da/0.39a27,0.cc8f4/0.47665,0.e2b5a/0.3a58b,0.dfb07/0.47dfd,0.e7be6/0.481c9,0.ebc56/0.3ad23,0.e8816/0.4a3ad,0.16816/0.4a787,0.17a5e/0.57b6f,0.e3899/0.58323,0.cdae1/0.4af3c,0.ca33e/0.58eb3,0.c738d/0.784f,0.c0c3a/0.5928d,0.bf789/0.3965b,0.13cd3/0.47299,0.b96e1/0.284f3,0.e6bc9/0.42c6,0.f2d18/0.29f88,0.f36f1/0.68cfc,0.e8022/0.690d6,0.bacd8/0.6a7f4,0.b25ba/0.6abce,0.b0df4/0.28127,0.e3367/0.18a55,0.b5672/0.0e8377,0.17edf/0.18e21,0.e4880/0.7a63d,0.eff4e/0.7a263,0.b6d42/0.7bd5b,0.ae624/0.7c135,0.acd85/0.0e5d7e,0.da988/0.8539e,0.e5865/0.838a5,0.13931/0.87dff,0.bacd8/0.881d9,0.b96e1/0.06f2dc,0.c27dc/0.0718d4,0.d9251/0.08ba86,0.16df5/0.09c456,0.d91b0/0.8a486,0.d8235/0.059d1b,0.f9e6/0.242fa,0.a7370/0.44355,0.9cb6e/0.2c59b,0.a3955/0.44602,0.9626b/0.2bee1,0.9d515/0.419bc,0.10c94/0.43d01,0.a9954/0.4197d,0.9d60d/0.23d09,0.a4fa5/0.21f4b,0.ae9b0/0.3b163,0.a9342/0.2e51,0.dd2a/0.0ddc97,0.956ba/0.25123,0.8e0e5/0.22c31,0.95ea5/0.0e60ca,0.84aed/0.0acd7d,0.99658/0.07c991,0.75a8b/0.0903a4,0.72c46/0.0b57b0,0.6e43b/0.0d5c74,0.7220b/0.0486ed,0.6ad1d/0.06ab1f,0.713f3/0.004e35f,0.59101/0.05c62d,0.57d4a/0.04a4e4,0.049ced/0.2d610,0.01b41a/0.2694f,0.22526/0.0cf843,0.2095f/0.0aa6fb,0.24bf9/0.19e0f,0.08fdba/0.4a3f,0.1efc5/0.072922,0/0.1d676,0.20a7b/0.0a32a5,0.01914c/0.25ed1,0.1e2c1/0.02f777,0.004be76/0.015ef4,0.34b9f/0.0920c8,0.38aef/0.0e2a4e,0.393b7/0.1c6e6,0.29673/0.04f32d,0.351b3/0.086fd5,0.32bb1/0.00d3507,0.58c21/0.1a253,0.591b2/0.31b7,0.5d1d6/0.22f57,0.50a2d/0.0c129d,0.59555/0.1972b,0.57db3/0.0804fe,0.6bef3/0.2190c,0.6c1a3/0.20835,0.3270d/0.8cfbf,0.2c98c/0.8e30f,0.26243/0.b2f51,0.1d46d/0.b7e6e,0.22241/0.92edf,0.1f3f3/0.a79c1,0.27ee2/0.b2b14,0.5367/0.e15e,0.33472/0.aa80f,0.3da1f/0.8d863,0.4427a/0.90d4f,0.365c0/0.b0659,0.622c0/0.b37b2,0.72824/0.8c753,0.68abe/0.b16e3,0.1f5/0.8e250,0.61c75/0.8d9ee,0.565b3/0.a5a39,0.5dc76/0.ac5bd,0.c6446/0.d1ed1,0.12659/0.db48c,0.aa543/0.15321,0.5fcde/0.8eb7b,0.51e4c/0.a3490,0.525ed/0.921e7,0.60ebb/0.a2c67,0.62d83/0.8d799,0.0f0bb9/0.e6beb,0.010a29/0.eb56f,0.086ab5/0.c9e8b,0.21324/0.ca3e1,0.27479/0.ca2dd,0.290e1/0.de309,0.55751/0.e16ad,0.5d3a3/0.dd4cb,0.48b45/0.c8251,0.48c33/0.e6e7a,0.40f79/0.c761a,0.5b385/0.b6559,0.20754/0.dd487,0.1933f/0.e500e,0.29882/0.dd3c6,0.00b862a/0.f23bc,0.18b9e/0.e5f50,0.3ae97/0.ef65c,0.57cc8/0.e0a95,0.56885/0.e6178,0.35488/0.f1f69,0.497ea/0.e742c,0.91e45/0.be381,0.94403/0.aee65,0.bbffa/0.bec0e,0.95468/0.a9cc7,0.af85d/0.a9e94,0.b8199/0.a73d3,0.c0ad5/0.a73d3,0.c9411/0.a9e94,0.d045a/0.af415,0.d4f36/0.b633f,0.d6829/0.bec0e,0.d4f36/0.13e08,0.d045a/0.cdb78,0.c9411/0.d30fb,0.c0ad5/0.d5bbc,0.b8199/0.d5bbc,0.af85d/0.d30fb,0.95468/0.14f8d,0.94403/0.cc85b,0.81847/0.be381,0.824c0/0.b6bcc,0.d7f6/0.a04aa,0.9d96a/0.99e0f,0.ad2ef/0.9488e,0.12f4b/0.9488e,0.cd273/0.99e0f,0.15c35/0.1a13,0.e16d4/0.afca3,0.e48bb/0.bec0e,0.e16d4/0.cd2ec,0.15c35/0.da023,0.cd273/0.e3180,0.12f4b/0.e8701,0.ad2ef/0.e8701,0.9d96a/0.e3180,0.d7f6/0.db13d,0.824c0/0.c5b36,0.67c92/0.be381,0.6e060/0.11caf,0.7d9e5/0.a26df,0.9373a/0.90cb4,0.a62a6/0.8a618,0.bb380/0.8a618,0.cf7e1/0.90cb4,0.e24c2/0.9c8d0,0.17ca5/0.ac955,0.f1cd3/0.bec0e,0.17ca5/0.d063a,0.cf7e1/0.ec2db,0.e24c2/0.e06bf,0.bb380/0.f2977,0.a62a6/0.f2977,0.9373a/0.ec2db,0.7d9e5/0.da8b0,0.6e060/0.cb0b9,0.11b4f/0.58c42,0.a83e3/0.4ce6a,0.b20c6/0.58c42,0.aa344/0.4ce6a,0.f0f3/0.3df0c,0.f0f3/0.3e74d,0.7b233/0.2ceaa,0.7b233/0.2d6eb,0.639ab/0.26b9e,0.629fb/0.273de,0.49212/0.26b9e,0.4a1c2/0.273de,0.2fa29/0.2ceaa,0.4914/0.2d6eb,0.0efdfd/0.38441,0.1a102/0.38c81,0.04a531/0.47be0,0.05deea/0.47be0,0.04a531/0.aa17,0.0efdfd/0.79c85,0.05deea/0.aa17,0.1a102/0.79445,0.4914/0.849db,0.2fa29/0.8521c,0.4a1c2/0.8ace8,0.49212/0.8b528,0.629fb/0.8ace8,0.639ab/0.8b528,0.7b233/0.849db,0.7b233/0.8521c,0.f0f3/0.73979,0.f0f3/0.741ba,0.a83e3/0.102f,0.aa344/0.102f,0.009ae75/0.5ef4f,1/0.c4a1d,1/0.bec0e,1/0.b8572,0.009ae75/0.53177,0.8fbab/0.58c42,0.8dc49/0.4f7b0,0.82fb7/0.439d7,0.6e63f/0.35afb,0.5ac78/0.310b2,0.472b1/0.310b2,0.3293a/0.35afb,0.23de5/0.3ef8e,0.2b45/0.4b5a7,0.0bffd7/0.59483,0.0194bb/0.59483,0.2b45/0.66b1f,0.23de5/0.73138,0.3293a/0.7c5cb,0.472b1/0.81014,0.5ac78/0.81014,0.6e63f/0.7c5cb,0.82fb7/0.6e6ee,0.8dc49/0.62916,0.6b72d/0.59483,0.697ce/0.51073,0.639ab/0.76ea,0.5ac78/0.45adc,0.4ffe4/0.43196,0.443a0/0.43196,0.3970c/0.45adc,0.3198a/0.76ea,0.2bb68/0.518b4,0.29c06/0.59483,0.2bb68/0.60812,0.3198a/0.67ba0,0.3970c/0.6c5ea,0.443a0/0.6ef30,0.4ffe4/0.6ef30,0.5ac78/0.6c5ea,0.639ab/0.67ba0,0.697ce/0.61053,0.4a1c2/0.59483,0.009ae75/0.59483";			geo0.aV= read(geo0.aVstr).split(",");			geo0.aU= read(geo0.aUstr).split(",");			geo0.f="0,1,2,0,1,2,1,3,2,1,3,2,3,4,5,3,4,5,2,3,5,2,3,5,4,6,5,6,7,8,6,7,5,7,9,8,6,8,7,7,a,9,8,9,7,a,b,9,a,b,8,c,d,a,b,9,8,d,b,a,0,b,1,0,e,1,b,a,1,e,f,1,c,0,d,10,0,11,0,2,d,0,2,11,d,2,e,11,2,12,2,5,e,2,5,12,5,7,e,8,9,13,7,f,e,9,14,13,7,9,f,9,b,14,9,10,f,b,15,14,b,11,9,d,16,b,11,10,9,16,15,b,c,11,0,10,17,0,11,b,0,17,e,0,12,c,d,18,10,11,13,c,12,19,10,18,14,12,e,1a,18,12,12,d,e,18,11,12,f,15,e,14,1b,13,15,14,e,1b,1c,13,10,15,f,15,1b,14,10,16,15,15,1d,1b,11,16,10,16,1d,15,11,17,16,16,1e,1d,17,11,13,1f,17,19,13,11,c,19,17,10,15,18,14,1b,20,1c,18,19,14,20,21,1c,16,18,15,1d,20,1b,16,1a,18,1d,22,20,16,17,1a,1d,1e,22,17,1b,1a,1e,23,22,1b,17,1c,24,1f,25,17,13,1c,1f,19,25,1d,13,12,26,19,18,1c,13,1d,25,19,26,19,1d,14,27,26,1a,1d,12,14,26,18,1a,18,1e,19,20,28,21,1a,1e,18,22,28,20,1a,1b,1e,22,23,28,1b,1c,1e,24,25,29,1e,1c,1d,29,25,26,1e,1d,19,29,26,27,1f,20,21,2a,2b,2c,20,22,21,2b,2d,2c,22,23,21,2d,2e,2c,22,24,23,2d,2f,2e,24,25,23,30,31,32,25,26,23,31,33,32,20,1f,26,34,35,33,25,20,26,31,34,33,27,21,28,36,2c,37,1f,21,27,2a,2c,36,28,21,29,37,2c,38,21,23,29,2c,2e,38,23,2a,29,32,39,3a,23,26,2a,32,33,39,2a,1f,27,39,35,3b,26,1f,2a,33,35,39,2b,28,2c,3c,37,3d,27,28,2b,36,37,3c,28,29,2c,37,38,3d,2c,29,2d,3d,38,3e,29,2e,2d,3a,3f,40,29,2a,2e,3a,39,3f,2e,27,2b,3f,3b,41,2a,27,2e,39,3b,3f,2b,2c,2f,3c,3d,42,2c,2d,2f,3d,3e,42,2d,2e,2f,40,3f,43,2e,2b,2f,3f,41,43,30,31,32,44,45,46,31,33,32,45,47,46,34,30,32,48,44,46,35,30,34,49,44,48,36,37,34,4a,4b,4c,37,35,34,4b,4d,4c,33,31,36,4e,4f,4a,31,37,36,4f,4b,4a,32,38,39,46,50,51,32,33,38,46,47,50,32,39,3a,46,51,52,34,32,3a,48,46,52,3b,34,3a,53,4c,54,36,34,3b,4a,4c,53,33,3b,38,4e,53,55,33,36,3b,4e,4a,53,39,3c,3d,51,56,57,39,38,3c,51,50,56,3a,3d,3e,52,57,58,3a,39,3d,52,51,57,3f,3a,3e,59,54,5a,3b,3a,3f,53,54,59,38,3f,3c,55,59,5b,38,3b,3f,55,53,59,3d,3c,40,57,56,5c,3e,3d,40,58,57,5c,3f,3e,40,59,5a,5d,3c,3f,40,5b,59,5d,41,42,43,5e,5f,60,42,44,43,5f,61,60,42,45,44,5f,62,61,45,46,44,62,63,61,46,45,47,64,65,66,45,48,47,65,67,66,47,41,43,66,68,69,48,41,47,67,68,66,49,4a,4b,6a,6b,6c,4a,4c,4b,6b,6d,6c,4c,4d,4b,6e,6f,70,4c,4e,4d,71,72,73,4e,4f,4d,74,75,6f,4e,50,4f,74,76,75,4f,50,49,77,78,6a,50,4a,49,78,6b,6a,43,44,51,60,61,79,44,52,51,61,7a,79,44,53,52,61,7b,7a,44,46,53,61,63,7b,53,46,54,7c,64,7d,46,47,54,64,66,7d,54,47,51,7d,66,7e,47,43,51,66,69,7e,55,49,56,7f,6a,80,49,4b,56,6a,6c,80,4d,57,56,6f,81,82,4b,4d,56,70,6f,82,4d,4f,57,6f,75,81,4f,58,57,75,83,81,58,49,55,84,6a,7f,4f,49,58,77,6a,84,52,59,51,85,86,87,53,59,52,7b,88,7a,53,54,59,7c,7d,89,59,54,51,89,7d,7e,5a,55,56,8a,8b,8c,57,5a,56,81,8d,82,57,58,5a,81,83,8d,58,55,5a,84,7f,8e,5b,42,5c,8f,90,91,42,41,5c,90,92,91,41,5d,5c,92,93,91,5d,5e,5c,93,94,91,5e,5f,5c,94,95,91,5f,60,5c,95,96,91,60,61,5c,96,97,91,61,62,5c,97,98,91,62,63,5c,98,99,91,63,64,5c,99,9a,91,64,65,5c,9a,9b,91,65,66,5c,9b,9c,91,66,67,5c,9c,9d,91,67,68,5c,9d,9e,91,68,69,5c,9e,9f,91,69,4c,5c,9f,a0,91,4c,4a,5c,a0,a1,91,4a,5b,5c,a1,8f,91,6a,45,5b,a2,a3,8f,45,42,5b,a3,90,8f,48,6b,41,a4,a5,92,41,6b,5d,92,a5,93,6b,6c,5d,a5,a6,93,6c,5e,5d,a6,94,93,6d,5f,5e,a7,95,94,6c,6d,5e,a6,a7,94,5f,6e,60,95,a8,96,6d,6e,5f,a7,a8,95,60,24,61,96,a9,97,6e,24,60,a8,a9,96,61,24,62,97,a9,98,24,22,62,a9,aa,98,62,22,63,98,aa,99,22,6f,63,aa,ab,99,63,30,64,99,ac,9a,6f,30,63,ab,ac,99,64,35,65,9a,ad,9b,30,35,64,ac,ad,9a,65,35,66,9b,ad,9c,35,70,66,ad,ae,9c,66,70,67,9c,ae,9d,70,71,67,ae,af,9d,67,71,68,9d,af,9e,71,72,68,af,b0,9e,72,69,68,b0,9f,9e,72,73,69,b0,b1,9f,69,73,4c,9f,b1,a0,73,4e,4c,b1,b2,a0,50,5b,4a,b3,8f,a1,50,6a,5b,b3,a2,8f,74,75,6a,b4,b5,a2,75,45,6a,b5,a3,a2,75,76,45,b5,b6,a3,76,48,45,b6,a4,a3,76,77,48,b6,b7,a4,77,6b,48,b7,a5,a4,77,78,6b,b7,b8,a5,78,6c,6b,b8,a6,a5,79,6d,6c,b9,a7,a6,78,79,6c,b8,b9,a6,6d,7a,6e,a7,ba,a8,79,7a,6d,b9,ba,a7,6e,7a,24,a8,ba,a9,7a,25,24,ba,bb,a9,22,20,6f,aa,bc,ab,20,7b,6f,bc,bd,ab,6f,31,30,ab,be,ac,7b,31,6f,bd,be,ab,35,7c,70,ad,bf,ae,37,7c,35,c0,bf,ad,70,7c,71,ae,bf,af,7c,7d,71,bf,c1,af,71,7d,72,af,c1,b0,7d,7e,72,c1,c2,b0,7e,73,72,c2,b1,b0,7e,7f,73,c2,c3,b1,7f,4e,73,c3,b2,b1,7f,80,4e,c3,c4,b2,80,50,4e,c4,b3,b2,80,81,50,c4,c5,b3,81,6a,50,c5,a2,b3,81,74,6a,c5,b4,a2,82,83,74,c6,c7,c8,83,75,74,c7,c9,c8,83,76,75,c7,ca,c9,83,84,76,c7,cb,ca,84,77,76,cb,cc,ca,84,85,77,cb,cd,cc,85,78,77,cd,ce,cc,85,86,78,cd,cf,ce,86,79,78,cf,d0,ce,86,87,79,cf,d1,d0,87,7a,79,d1,d2,d0,87,88,7a,d1,d3,d2,88,25,7a,d3,d4,d2,88,89,25,d3,d5,d4,25,8a,20,d4,d6,d7,89,8a,25,d5,d6,d4,8b,37,31,d8,d9,da,8b,8c,37,d8,db,d9,37,8d,7c,d9,dc,dd,8c,8d,37,db,dc,d9,7c,8e,7d,dd,de,df,8d,8e,7c,dc,de,dd,7d,8f,7e,df,e0,e1,8e,8f,7d,de,e0,df,8f,90,7e,e0,e2,e1,90,7f,7e,e2,e3,e1,90,91,7f,e2,e4,e3,91,80,7f,e4,e5,e3,91,92,80,e4,e6,e5,92,81,80,e6,e7,e5,92,74,81,e6,c8,e7,92,82,74,e6,c6,c8,1,8b,3,e8,d8,e8,3,8b,31,e8,d8,da,3,31,7b,e9,be,bd,4,3,7b,ea,e9,bd,6,4,7b,eb,ea,bd,20,6,7b,bc,eb,bd,8a,6,20,d6,ec,d7,8a,8,6,d6,ec,ec,93,83,82,ed,c7,c6,93,94,83,ed,ee,c7,94,84,83,ee,cb,c7,94,95,84,ee,ef,cb,95,85,84,ef,cd,cb,95,96,85,ef,f0,cd,96,86,85,f0,cf,cd,96,97,86,f0,f1,cf,97,87,86,f1,d1,cf,97,98,87,f1,f2,d1,99,88,87,f3,d3,d1,98,99,87,f2,f3,d1,9a,89,88,f4,d5,d3,99,9a,88,f3,f4,d3,89,9b,8a,d5,f5,d6,9a,9b,89,f4,f5,d5,9c,9d,8a,f6,f7,d6,9b,9c,8a,f5,f6,d6,9d,9c,8b,f7,f6,d8,9c,9e,8b,f6,f8,d8,9e,8c,8b,f8,db,d8,9e,9f,8c,f8,f9,db,8c,9f,8d,db,f9,dc,9f,a0,8d,f9,fa,dc,8d,a0,8e,dc,fa,de,a0,a1,8e,fa,fb,de,8e,a2,8f,de,fc,e0,a1,a2,8e,fb,fc,de,a2,a3,8f,fc,fd,e0,8f,a3,90,e0,fd,e2,a3,a4,90,fd,fe,e2,90,a4,91,e2,fe,e4,a4,a5,91,fe,ff,e4,91,a5,92,e4,ff,e6,a5,93,92,ff,ed,e6,92,93,82,e6,ed,c6,a6,94,93,100,ee,ed,a6,a7,94,100,101,ee,a7,95,94,101,ef,ee,a7,a8,95,101,102,ef,a8,96,95,102,f0,ef,a8,a9,96,102,103,f0,a9,97,96,103,f1,f0,a9,aa,97,103,104,f1,aa,98,97,104,f2,f1,aa,ab,98,104,105,f2,ab,99,98,105,f3,f2,ab,ac,99,105,106,f3,ad,9a,99,107,f4,f3,ac,ad,99,106,107,f3,ae,9b,9a,108,f5,f4,ad,ae,9a,107,108,f4,af,9c,9b,109,f6,f5,ae,af,9b,108,109,f5,9c,af,9e,f6,109,f8,af,b0,9e,109,10a,f8,9e,b0,9f,f8,10a,f9,b0,b1,9f,10a,10b,f9,9f,b1,a0,f9,10b,fa,b1,b2,a0,10b,10c,fa,a0,b3,a1,fa,10d,fb,b2,b3,a0,10c,10d,fa,a1,b4,a2,fb,10e,fc,b3,b4,a1,10d,10e,fb,b4,b5,a2,10e,10f,fc,a2,b5,a3,fc,10f,fd,b5,b6,a3,10f,110,fd,a3,b6,a4,fd,110,fe,b6,b7,a4,110,111,fe,a4,b7,a5,fe,111,ff,b7,a6,a5,111,100,ff,a5,a6,93,ff,100,ed,b8,a7,a6,112,101,100,b8,a8,a7,112,102,101,b8,a9,a8,112,103,102,b8,aa,a9,112,104,103,b8,ab,aa,112,105,104,b8,ac,ab,112,106,105,b8,ad,ac,112,107,106,b8,ae,ad,112,108,107,b8,af,ae,112,109,108,af,b8,b0,109,112,10a,b0,b8,b1,10a,112,10b,b1,b8,b2,10b,112,10c,b2,b8,b3,10c,112,10d,b3,b8,b4,10d,112,10e,b4,b8,b5,10e,112,10f,b5,b8,b6,10f,112,110,b6,b8,b7,110,112,111,b7,b8,a6,111,112,100,8a,9d,8,d6,f7,ec,9d,a,8,f7,113,ec,9d,8b,1,f7,d8,e8,a,9d,1,113,f7,e8";			geos.push(geo0);		}		private function buildMaterials():void		{				var obj_0_0_Bitmap:Bitmap = new Obj_0_0_Bitmap();				applyMaterialToMesh("obj_0_0", obj_0_0_Bitmap.bitmapData);		}		private function applyMaterialToMesh(id:String, bmd:BitmapData):void		{			for(var i:int;i<meshes.length;++i){				if(meshes[i].name == id){					meshes[i].material = new BitmapMaterial(bmd);					break;				}			}		}		private function cleanUp():void		{			for(var i:int = 0;i<1;++i){				objs["obj"+i] == null;			}			aV = null;			aU = null;		}		private function addContainers():void		{			aC = [];			aC.push(this);			var m0:Matrix3D = new Matrix3D(new Vector.<Number>([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]));			 			transform.matrix3D = m0;			name = "model_file";			var cont1:ObjectContainer3D = new ObjectContainer3D();			aC.push(cont1);			addChild(cont1);			var m1:Matrix3D = new Matrix3D(new Vector.<Number>([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]));			 			cont1.transform.matrix3D = m1;			cont1.name = "g0";		}		public function get containers():Array		{			return aC;		}		public function get meshes():Array		{			return oList;		}		private function read(str:String):String		{			var start:int= 0;			var chunk:String;			var end:int= 0;			var dec:String = "";			var charcount:int = str.length;			for(var i:int = 0;i<charcount;++i){				if (str.charCodeAt(i)>=44 && str.charCodeAt(i)<= 48 ){					dec+= str.substring(i, i+1);				}else{					start = i;					chunk = "";					while(str.charCodeAt(i)!=44 && str.charCodeAt(i)!= 45 && str.charCodeAt(i)!= 46 && str.charCodeAt(i)!= 47 && i<=charcount){						i++;					}					chunk = ""+parseInt("0x"+str.substring(start, i), 16 );					dec+= chunk;					i--;				}			}			return dec;		}	}}